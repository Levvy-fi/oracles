name: Publish Docker image

on:
  push:
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build:
    name: Build Docker image
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: "ubuntu-22.04"
            platform: linux/amd64
            rust_target: x86_64-unknown-linux-gnu
          - os: "ubuntu-22.04"
            platform: linux/arm64
            rust_target: aarch64-unknown-linux-gnu

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@5138f76647652447004da686b2411557eaf65f33

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: sundaeswap/butane-oracle

      - name: Install ARM toolchain
        if: matrix.rust_target == 'aarch64-unknown-linux-gnu'
        run: |
          rustup target install aarch64-unknown-linux-gnu
          sudo apt install gcc-aarch64-linux-gnu

      - name: Rust Cache
        id: cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.rust_target }}

      - name: Compile
        run: cargo build --release --target ${{ matrix.rust_target }}

      - name: Prepare platform pair
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ./prebuilt.Dockerfile
          platforms: ${{ matrix.platform }}
          build-args: |
            RUST_TARGET=${{ matrix.rust_target }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=sundaeswap/butane-oracle,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: "ubuntu-22.04"
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: sundaeswap/butane-oracle

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'sundaeswap/butane-oracle@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect sundaeswap/butane-oracle:${{ steps.meta.outputs.version }}
